****************************Problem*********************************
You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.

 

 

Example 1:



Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]
Output: true
Example 2:



Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
Output: false
 

Constraints:

2 <= coordinates.length <= 1000
coordinates[i].length == 2
-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4
coordinates contains no duplicate point.

***************************0ms**************************************
class Solution {
   public boolean checkStraightLine(int[][] coordinates) {
       // (y - y1) / (x - x1) = (y1 - y0) / (x1 - x0)
        int x0 = coordinates[0][0], y0 = coordinates[0][1], x1 = coordinates[1][0], y1 = coordinates[1][1];
        int dx = x1 - x0, dy = y1 - y0;
        for (int[] co : coordinates) {
            int x = co[0], y = co[1];
            if (dx * (y - y1) != dy * (x - x1))
                return false;
        }
        return true;
    }
}
***********************My Solution**********************************
class Solution {
    public boolean checkStraightLine(int[][] coordinates) {
        if(coordinates.length==2){
            return true;
        }
        double slope = getSlope(coordinates[0],coordinates[1]);
        double intercept = getIntercept(slope,coordinates[0]);
 //       System.out.println(slope+" "+intercept);
        for(int i=2;i<coordinates.length;++i){
            double isCollinear = coordinates[i][1]-(slope*coordinates[i][0])-intercept;
            if(isCollinear==0){
                continue;
            }else return false;
        }
        return true;
    }
    public double getSlope(int[] x, int[] y){
        return ((y[1]-x[1])/((y[0]-x[0])*1.0));
    }
    public double getIntercept(double slope, int[] x){
        return x[1]-(slope*x[0]);
    }
}